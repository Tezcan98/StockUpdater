AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  StockUpdater

  Sample SAM Template for StockUpdater
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  StockUpdaterAPI:
    Type: AWS::Serverless::Api # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
        StageName: stock
  IncreaseFunction:
      Type: AWS::Serverless::Function
      Properties:
          CodeUri: src/increase/
          Handler: app.lambdaHandler
          Runtime: nodejs14.x
          Architectures:
            - x86_64
          Events:
            inc:
                Type: Api 
                Properties:
                    RestApiId: !Ref StockUpdaterAPI
                    Path: /increase
                    Method: get
  DecreaseFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/decrease/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      Events:
        dec:
            Type: Api
            Properties:
                RestApiId: !Ref StockUpdaterAPI
                Path: /decrease/{deviceID}/{productType}
                Method: get  
  LogsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/logs-page/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      Events:
        dec:
            Type: Api 
            Properties:
                RestApiId: !Ref StockUpdaterAPI
                Path: /logs
                Method: get
  DatabaseFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/database-helper/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      Events:
        dec:
            Type: Api 
            Properties:
                RestApiId: !Ref StockUpdaterAPI
                Path: /database
                Method: any 
  DecreaseIotTopicRule:
       Type: AWS::IoT::TopicRule
       Properties:
         RuleName: iot_decrease_rule
         TopicRulePayload:
           AwsIotSqlVersion: '2016-03-23'
           RuleDisabled: false
           Sql: "SELECT device_id, detergent, softener FROM 'iotdb' WHERE softener < 140 or detergent < 200"
           Actions:
             - Lambda:
                 FunctionArn: { "Fn::GetAtt": ['DecreaseFunction', 'Arn']}
  IncreaseIotTopicRule:
       Type: AWS::IoT::TopicRule
       Properties:
         RuleName: iot_increase_rule
         TopicRulePayload:
           AwsIotSqlVersion: '2016-03-23'
           RuleDisabled: false
           Sql: "SELECT device_id, detergent, softener FROM 'iotdb' WHERE softener > 140 and detergent > 200"
           Actions:
             - Lambda:
                 FunctionArn: { "Fn::GetAtt": ['IncreaseFunction', 'Arn']}
    
     
  
Outputs:
  StockUpdaterAPI:
    Description: 'API Gateway endpoint URL for Staging stage for Hello World function'
    Value: !Sub 'https://${StockUpdaterAPI}.execute-api.${AWS::Region}.amazonaws.com/stock'
  StockUpdaterAPIRestApiId:
    Description: 'API Gateway ARN for Basic AWS API Gateway'
    Value: !Ref StockUpdaterAPI
    Export:
      Name: StockUpdaterAPI-RestApiId
  StockUpdaterAPIRootResourceId:
    Value: !GetAtt StockUpdaterAPI.RootResourceId
    Export:
      Name: StockUpdaterAPI-RootResourceId